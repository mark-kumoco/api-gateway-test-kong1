Description:
This config is for a Windows10 machine running Kong API Gateway in Docker containers, and a local VM running a web server on TCP80 and TCP81. Kong commands are taken from the Kong website.

Objective:
Once all config is completed, testing is accomplished via this first flow of traffic:

1. Web browser on Windows10 machine tries to connect to http://ubuntu:8000
2. Kong container (listening on localhost:8000) passes traffic to the VM running a web server, in this instance, on 192.168.239.16 TCP80.
3. VM should reply with website hosted on port 80 via Kong to web browser.

The second flow of traffic to test is:

1. Web browser on Windows10 machine tries to connect to http://ubuntu81:8000
2. Kong container (listening on localhost:8000) passes traffic to the VM running a web server on 192.168.239.16 TCP81.
3. VM should reply with website hosted on port 81 via Kong to web browser.

==============================================================================
BASIC Configuration:
First, on the Windows10 host, add these lines (or similar) to the file C:\Windows\System32\drivers\etc\hosts

127.0.0.1 ubuntu.lumits.com. ubuntu
127.0.0.1 ubuntu81.lumits.com. ubuntu81

Second, in this instance an Ubuntu VM called 'ubuntu' is running on Windows Hyper-V, the VMs NIC is on the same subnet as the Windows10 host (192.168.239.16 and 192.168.239.102 respectively). Install and start a web server on the VM (e.g nginx). Create a second web site (in addition to the default site) listening on port 81. Edit /etc/nginx/sites-available/default, add the following:

server {
    listen       81;
    server_name  ubuntu81 ubuntu81.lumits.com;
    root         /var/www/ubuntu81/;
}

Populate the respective directories with HTML content.

/var/www/html/index.html
/var/www/ubuntu81/index.html

Restart nginx:

sudo systemctl restart nginx

Test the web sites are up by browsing to the VM's IP address from the Windows10 machine, you should be able to view the websites: http://192.168.239.16:80/ and http://192.168.239.16:81/

Then create the two Kong containers (one for Kong and one for Postgres) - note change 'password' below to something appropriate:

docker run -d --name kong-database -p 5432:5432 -e "POSTGRES_USER=kong" -e "POSTGRES_DB=kong" -e "POSTGRES_PASSWORD=password" postgres:9.6

docker run --rm --link kong-database:kong-database  -e "KONG_PG_PASSWORD=password" -e "KONG_DATABASE=postgres" -e "KONG_PG_HOST=kong-database" -e "KONG_CASSANDRA_CONTACT_POINTS=kong-database" kong kong migrations bootstrap

docker run -d --add-host="ubuntu:192.168.239.16" --name kong --link kong-database:kong-database -e "KONG_DATABASE=postgres" -e "KONG_PG_HOST=kong-database" -e "KONG_PG_PASSWORD=password" -e "KONG_CASSANDRA_CONTACT_POINTS=kong-database" -e "KONG_PROXY_ACCESS_LOG=/dev/stdout" -e "KONG_ADMIN_ACCESS_LOG=/dev/stdout" -e "KONG_PROXY_ERROR_LOG=/dev/stderr" -e "KONG_ADMIN_ERROR_LOG=/dev/stderr" -e "KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl" -p 8000:8000 -p 8443:8443 -p 8001:8001 -p 8444:8444 kong

[note the last 'docker run' command has the IP address of the web server VM added to the Kong containers host file via --add-host]

Configure Kong: the following curl commands are issued from the Kong container (not postgres OR the Windows10 machine).

curl -i -X POST --url http://localhost:8001/services/ --data 'name=ubuntu' --data 'url=http://ubuntu:80'
curl -i -X POST --url http://localhost:8001/services/ --data 'name=ubuntu81' --data 'url=http://ubuntu:81'

You should receive a 201 Created status message for both commands. You can see the new JSON configuration in Kong@ http://localhost:8001/services from the Windows10 machine. Then create Kong routes from curl on the Kong container:

curl -i -X POST --url http://localhost:8001/services/ubuntu/routes --data 'hosts[]=ubuntu'
curl -i -X POST --url http://localhost:8001/services/ubuntu81/routes --data 'hosts[]=ubuntu81'

You should receive a 201 Created status for both commands. You can see the new JSON configuration in Kong@ http://localhost:8001/routes You should now be able to view the websites via Kong by issuing these commands on the Kong container...

curl -i -X GET --url http://localhost:8000/ --header 'Host: ubuntu'
curl -i -X GET --url http://localhost:8000/ --header 'Host: ubuntu81'

Or by browsing to http://ubuntu:8000/ or http://ubuntu81:8000/ on the Windows10 machine.

Other API configuration is viewable https://docs.konghq.com/2.0.x/admin-api/

==============================================================================
AUTHENTICATION:
Enable the key-auth plugin on Kong:

curl -i -X POST --url http://localhost:8001/plugins --data 'name=key-auth'

Enable the key-auth plugin on 'ubuntu' service:

curl -i -X POST --url http://localhost:8001/services/ubuntu/plugins --data 'name=key-auth'

Create user:

curl -i -X POST --url http://localhost:8001/consumers --data 'username=mark'

Create secret for above user:

curl -i -X POST --url http://localhost:8001/consumers/mark/key-auth --data 'key=pw12345'

Access 'ubuntu' service with key:

http://ubuntu:8000/?apikey=pw12345

===========================================================================================
RATE-LIMITING
Rate limit the 'ubuntu' service:

curl -i -X POST --url http://localhost:8001/services/ubuntu/plugins --data 'name=rate-limiting' --data 'config.minute=5'

Request the service more than 5 time in 1 minute and you'll see:

message	"API rate limit exceeded"

===========================================================================================
VIEW PLUGIN CONFIGURATION
With your browser, for example, you can browse the 'ubuntu' plugins:

http://localhost:8001/services/ubuntu/plugins

or all plugins:

http://localhost:8001/plugins

===========================================================================================
WHITE/BLACKLIST IPs - can be applied to Service/Route/Consumer

curl -X POST http://localhost:8001/services/ubuntu/plugins --data "name=ip-restriction2" --data "config.whitelist=192.168.239.0/24" OR --data "config.blacklist=0.0.0.0"

message	"Your IP address is not allowed"